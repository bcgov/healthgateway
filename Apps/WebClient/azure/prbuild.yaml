name: PR$(Rev:.r) #Build number

#Build variables
variables:
  App.Home: $(Build.SourcesDirectory)/Apps/WebClient
  App.Name: webclient

pool:
  name: 'HealthGateway'

trigger: none

pr:
  branches:
   include:
   - dev  
  paths:
   include:
   - Apps/WebClient/src
   - Apps/WebClient/test
   - Apps/WebClient/azure/prbuild.yaml
   
steps:
- task: Npm@1
  displayName: Install NPM Packages
  inputs:
    command: 'install'
    workingDir: '$(App.Home)/src/ClientApp'

# - task: DotNetCoreCLI@2
#   displayName: Run dotnet Tests
#   inputs:
#     command: 'test'
#     projects: '$(App.Home)/test/test.csproj'
#     arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
#     testRunTitle: 'WebClient'

# - script: |
#    set -e
#    dotnet tool install -g dotnet-reportgenerator-globaltool
#    reportgenerator -reports:$(App.Home)/test/**/coverage.cobertura.xml -targetdir:$(App.Home)/CodeCoverage -reporttypes:"HtmlInline_AzurePipelines;Cobertura"
#   displayName: Create Code Coverage Report

- task: DotNetCoreCLI@2
  displayName: Run dotnet Tests
  inputs:
    command: 'test'
    projects: '$(App.Home)/test/test.csproj'
    testRunTitle: 'WebClient'

- script: |
    set -e
    dotnet test test/test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger:"xunit;LogFileName=results.xml" -r ./xUnitResults 
    npm --prefix src/ClientApp test
    dotnet sonarscanner begin /d:sonar.verbose=false /k:"webclient_pr_$(System.PullRequest.PullRequestNumber)" /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" /d:sonar.login="$(sonar.login)" /d:sonar.scm.disabled="true" /d:sonar.typescript.test.reportPaths="../sonar_reports/jest.out/lcov.info" /d:sonar.coverage.exclusions="**Tests*.cs, **test*.ts" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.typescript.lcov.reportPaths="../sonar_reports/jest.out/lcov.info" /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" /d:sonar.testExecutionReportPaths="sonar_reports/jest.out/test-report.xml" /d:sonar.test.inclusions="**/*.test.ts"
    dotnet build    
    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
    echo "$@" >&2
  displayName: 'Perform Static Code Analysis'
  continueOnError: 'false'
  workingDirectory: $(Build.SourcesDirectory)/Apps/WebClient
  
- task: Bash@3
  displayName: 'Add SonarQube Report to GitHub Pull Request'
  inputs:
    targetType: 'inline'
    script: 'curl -d ''{"body":"SonarQube Report: https://sonarqube-gateway.pathfinder.gov.bc.ca/dashboard?id=webclient_pr_$(System.PullRequest.PullRequestNumber)"}'' -H "Content-Type: application/json" -H "Authorization: Bearer $(github.token)" -X POST https://api.github.com/repos/bcgov/healthgateway/issues/$(System.PullRequest.PullRequestNumber)/comments'

# - task: DotNetCoreCLI@2
#   displayName: Run dotnet Tests
#   inputs:
#     command: 'test'
#     projects: '$(App.Home)/test/test.csproj'
#     testRunTitle: 'WebClient'

# - script: |
#     set -e
#     dotnet test test/test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger:"xunit;LogFileName=results.xml" -r ./xUnitResults 
#     npm --prefix src/ClientApp test
#     dotnet sonarscanner begin /d:sonar.verbose=false /k:"webclient_$(System.PullRequest.PullRequestNumber)" /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" /d:sonar.login="$(sonar.login)" /d:sonar.scm.disabled="true" /d:sonar.typescript.test.reportPaths="../sonar_reports/jest.out/lcov.info" /d:sonar.coverage.exclusions="**Tests*.cs, **test*.ts" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.typescript.lcov.reportPaths="../sonar_reports/jest.out/lcov.info" /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" /d:sonar.testExecutionReportPaths="sonar_reports/jest.out/test-report.xml" /d:sonar.test.inclusions="**/*.test.ts"
#     dotnet build    
#     dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
#     echo "$@" >&2
#   displayName: 'Perform Static Code Analysis'
#   continueOnError: 'false'
#   workingDirectory: $(Build.SourcesDirectory)/Apps/WebClient

# - task: PublishCodeCoverageResults@1
#   displayName: 'Publish Code Coverage'
#   inputs:
#     codeCoverageTool: Cobertura
#     summaryFileLocation: '$(App.Home)/CodeCoverage/Cobertura.xml'
#     pathToSources: '$(App.Home)/src'
#     reportDirectory: '$(App.Home)/CodeCoverage'

#- script: |
#    dotnet test test/test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
#    npm --prefix src test
#    dotnet sonarscanner begin /k:"webclient_dev" /v:$(Build.BuildNumber) /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" /d:sonar.login="$(sonar.login)" /d:sonar.coverage.exclusions="**Tests*.cs" /d:sonar.testExecutionReportPaths="src/jest.out/test-report.xml" /d:sonar.typescript.lcov.reportPaths="jest.out/lcov.info" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.verbose=true
#    dotnet build    
#    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
#    echo "$@" >&2
#  displayName: 'Perform static analisis'
#  continueOnError: 'false'
#  workingDirectory: $(Build.SourcesDirectory)/Apps/WebClient

- task: DotNetCoreCLI@2
  displayName: 'Publish dotnet Code'
  inputs:
    modifyOutputPath: false
    command: 'publish'
    publishWebProjects: false
    projects: '$(App.Home)/src'
    arguments: '-o $(Build.BinariesDirectory)'
    zipAfterPublish: false
