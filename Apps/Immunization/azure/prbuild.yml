name: PR$(Rev:.r) #Build number

#Build variables
variables:
  App.Home: $(Build.SourcesDirectory)/Apps/Immunization
  App.Name: immunization
  App.UnitTests: $(App.Home)/testUnit
  App.FunctionalTests: $(App.Home)/testFunctional

pool:
  name: 'HealthGateway'

trigger: none

pr:
  branches:
   include:
   - dev  
  paths:
   include:
   - Apps/Immunization
   - Apps/Common
   
steps:
- task: DotNetCoreCLI@2
  displayName: Run dotnet Tests
  inputs:
    command: 'test'
    projects: '$(App.UnitTests)/test.csproj'
    testRunTitle: 'Immunization Service Tests'

- script: |
    set -e
    dotnet test testUnit/test.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger:"xunit;LogFileName=results.xml" -r ./xUnitResults 
    dotnet sonarscanner begin /d:sonar.verbose=false /k:"immunization_pr_$(System.PullRequest.PullRequestNumber)" /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" /d:sonar.login="$(sonar.login)" /d:sonar.scm.disabled="true" /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
    dotnet build    
    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
    echo "$@" >&2
  displayName: 'Perform Static Code Analysis'
  continueOnError: 'false'
  workingDirectory: $(App.Home)
  enabled: 'true'
  
- task: Bash@3
  displayName: 'Add SonarQube Report to GitHub Pull Request'
  inputs:
    targetType: 'inline'
    script: 'curl -d ''{"body":"SonarQube Report: https://sonarqube-gateway.pathfinder.gov.bc.ca/dashboard?id=immunization_pr_$(System.PullRequest.PullRequestNumber)"}'' -H "Content-Type: application/json" -H "Authorization: Bearer $(github.token)" -X POST https://api.github.com/repos/bcgov/healthgateway/issues/$(System.PullRequest.PullRequestNumber)/comments'

- task: DotNetCoreCLI@2
  displayName: 'Publish dotnet Code'
  inputs:
    modifyOutputPath: false
    command: 'publish'
    publishWebProjects: false
    projects: '$(App.Home)/src'
    arguments: '-o $(Build.BinariesDirectory)'
    zipAfterPublish: false
