@using HealthGateway.Common.Data.Utils
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<MudTable Class="mt-3"
          Items="@Rows"
          AllowUnsorted="false"
          Breakpoint="@Breakpoint.Md"
          HorizontalScrollbar="true"
          Striped="true"
          Dense="true"
          data-testid="delegate-table">
    <ColGroup>
        <MudHidden Breakpoint="@Breakpoint.MdAndDown">
            <col style="width: 300px;" />
            <col style="width: 125px;" />
            <col style="width: 125px;" />
            <col />
            <col style="width: 125px;" />
            <col style="width: 125px;" />
        </MudHidden>
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>PHN</MudTh>
        <MudTh>DOB</MudTh>
        <MudTh>Address</MudTh>
        <MudTh>Status</MudTh>
        <MudTh>
            <span class="@(InEditMode ? "visible" : "invisible")">Select to Remove</span>
        </MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd data-testid="delegate-name" DataLabel="Name">@context.Name</MudTd>
        <MudTd data-testid="delegate-phn" DataLabel="PHN">@context.PersonalHealthNumber</MudTd>
        <MudTd data-testid="delegate-dob" DataLabel="DOB">@DateFormatter.ToShortDate(context.DateOfBirth)</MudTd>
        <MudTd data-testid="delegate-address" DataLabel="Address">@context.Address</MudTd>
        <MudTd data-testid="delegate-status" DataLabel="Status">
            <MudChip T="string"
                     Value="@EnumUtility.ToEnumString(context.DelegationStatus)"
                     Variant="@Variant.Text"
                     Size="@Size.Small"
                     Color="GetStatusColor(context.DelegationStatus)" />
        </MudTd>
        @if (InEditMode)
        {
            <MudTd DataLabel="Select to Remove">
                <MudHidden Breakpoint="@Breakpoint.MdAndDown">
                    <MudCheckBox
                        T="bool"
                        Value="@context.ToBeRemoved"
                        ValueChanged="@(value => ToggleRemoveDelegate(context.Hdid, value))"
                        Size="Size.Small"
                        data-testid="delegate-to-be-removed-checkbox" />
                </MudHidden>
                <MudHidden Breakpoint="@Breakpoint.MdAndDown" Invert="true">
                    <MudCheckBox
                        T="bool"
                        Value="@context.ToBeRemoved"
                        ValueChanged="@(value => ToggleRemoveDelegate(context.Hdid, value))"
                        Size="Size.Small"
                        Dense="true"
                        Class="mr-3"
                        data-testid="delegate-to-be-removed-checkbox" />
                </MudHidden>
            </MudTd>
        }
    </RowTemplate>
</MudTable>
