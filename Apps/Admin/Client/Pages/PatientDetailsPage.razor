@page "/patient-details"
@layout MainLayout
@attribute [Authorize(Roles = $"{Roles.Admin},{Roles.Reviewer},{Roles.Support}")]
@using HealthGateway.Admin.Client.Store.PatientDetails
@using HealthGateway.Admin.Client.Store.PatientSupport
@using HealthGateway.Common.Data.Utils
@using HealthGateway.Admin.Common.Constants
@using HealthGateway.Admin.Client.Components.Support
@using HealthGateway.Admin.Client.Components.AgentAudit
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Health Gateway Admin Patient Details</PageTitle>

<MudLink Href="/support?details" data-testid="patient-details-back-button">
    <MudText Typo="Typo.h5" class="mb-4">
        <MudIcon Icon="fas fa-arrow-left" /><span class="ml-2">Back</span>
    </MudText>
</MudLink>

<HgBannerFeedback
    Severity="Severity.Error"
    IsEnabled="HasPatientSupportDetailsError"
    TResetAction="PatientDetailsActions.ResetStateAction"
    DataTestId="messaging-verification-banner-feedback-error-message">
    @PatientDetailsState.Value.Error?.Message
</HgBannerFeedback>

<HgBannerFeedback
    Severity="Severity.Error"
    IsEnabled="HasPatientsError"
    TResetAction="PatientSupportActions.ResetStateAction"
    DataTestId="user-banner-feedback-error-message">
    @PatientSupportState.Value.Error?.Message
</HgBannerFeedback>

<HgBannerFeedback
    Severity="@Severity.Info"
    IsEnabled="HasPatientsWarning"
    TResetAction="PatientSupportActions.ResetStateAction"
    Class="mt-4"
    DataTestId="user-banner-feedback-warning-message">
    <ul>
        @foreach (string warning in PatientSupportState.Value.WarningMessages)
        {
            <li>@warning</li>
        }
    </ul>
</HgBannerFeedback>

@if (ShowStatusWarning)
{
    <HgBannerFeedback
        Severity="@Severity.Info"
        IsEnabled="@(!string.IsNullOrEmpty(StatusWarning))"
        TResetAction="PatientSupportActions.ResetStateAction"
        Class="mt-4"
        DataTestId="user-banner-feedback-status-warning-message">
        @StatusWarning
    </HgBannerFeedback>
}

@if (Patient != null)
{
    <HgPageHeading TopMargin="Breakpoint.Always">User Details</HgPageHeading>
    <MudGrid Spacing="2">
        <MudItem xs="12" lg="4">
            <HgField Label="Name" Value="@PatientName" data-testid="patient-name" />
        </MudItem>
        <MudItem xs="12" lg="4">
            <HgField Label="Birthdate" Value="@Patient.Birthdate.ToString()" data-testid="patient-dob" />
        </MudItem>
        <MudItem xs="12" lg="4">
            <HgField Label="PHN" Value="@Patient.PersonalHealthNumber" data-testid="patient-phn" />
        </MudItem>
        @if (CanViewHdid)
        {
            <MudItem xs="12">
                <HgField Label="HDID" Value="@Patient.Hdid" data-testid="patient-hdid" />
            </MudItem>
        }
        <MudItem xs="12" lg="6">
            <HgField Label="Physical Address" Value="@AddressUtility.GetAddressAsSingleLine(Patient.PhysicalAddress)" data-testid="patient-physical-address" />
        </MudItem>
        <MudItem xs="12" lg="6">
            <HgField Label="Mailing Address" Value="@AddressUtility.GetAddressAsSingleLine(Patient.PostalAddress)" data-testid="patient-mailing-address" />
        </MudItem>
    </MudGrid>

    @if (Patient.Status == PatientStatus.Default)
    {
        if (CanViewAccountDetails)
        {
            <MudText Class="mt-4" Typo="Typo.subtitle1">
                Account Details
            </MudText>
            <MudGrid Spacing="2" Class="mt-2">
                <MudItem xs="12" lg="6">
                    <HgField Label="Account Created" Value="@ProfileCreatedDateTime.ToString()" data-testid="profile-created-datetime" />
                </MudItem>
                <MudItem xs="12" lg="6">
                    <HgField Label="Last Login" Value="@ProfileLastLoginDateTime.ToString()" data-testid="profile-last-login-datetime" />
                </MudItem>
            </MudGrid>
        }

        if (CanViewMessagingVerifications)
        {
            <MessageVerificationTable Data="@MessagingVerifications" IsLoading="@PatientSupportDetailsLoading" />
        }

        if (CanViewDatasetAccess)
        {
            <DatasetAccessSection Data="@BlockedDataSources" IsLoading="@PatientSupportDetailsLoading" Hdid="@Hdid" CanEdit="@CanEditDatasetAccess" />
        }

        if (CanViewAgentAuditHistory)
        {
            <AgentAuditHistory Title="Agent Reason History" AgentActions="@AgentAuditHistory" IsLoading="@PatientSupportDetailsLoading" />
        }

        if (CanViewDependents)
        {
            <DependentTable Data="@Dependents" IsLoading="@PatientSupportDetailsLoading" />
        }
    }
    else if (CanViewAccountDetails)
    {
        <MudText Class="mt-4" Typo="Typo.subtitle1">
            Account Details
        </MudText>
        <MudText Class="mt-4" data-testid="no-hg-profile">
            No Health Gateway Profile
        </MudText>
    }

    if (CanViewCovidDetails && !ImmunizationsAreBlocked)
    {
        <Covid19ImmunizationSection Phn="@Patient.PersonalHealthNumber" Data="@VaccineDetails" IsLoading="@PatientSupportDetailsLoading" MailAddress="@MailAddress" />

        <Covid19AssessmentSection Data="@AssessmentDetails" IsLoading="@PatientSupportDetailsLoading" AssessmentPagePath="@Covid19TreatmentAssessmentPath" />
    }

    if (ImmunizationsAreBlocked)
    {
        <MudAlert data-testid="blocked-immunization-alert" Severity="Severity.Error" Dense="true" Outlined="true" Class="alert-background-color mt-4">
            Unable to retrieve vaccine records for this individual.
        </MudAlert>
    }
}
else if (PatientsLoaded)
{
    <MudText Class="mt-4" Typo="Typo.subtitle1">
        No user found with the specified HDID.
    </MudText>
}
else
{
    <MudProgressCircular Indeterminate="true" Size="Size.Large" Class="mt-4" />
}
