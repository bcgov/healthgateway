@page "/support"
@layout MainLayout
@attribute [Authorize(Roles = $"{Roles.Admin},{Roles.Reviewer}")]
@using HealthGateway.Admin.Client.Store.MessageVerification
@using HealthGateway.Admin.Client.Store.SupportUser
@using HealthGateway.Common.Data.Constants
@using HealthGateway.Common.Data.Utils
@using HealthGateway.Common.Ui.Constants
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Health Gateway Admin Support</PageTitle>
<HgPageHeading>Support</HgPageHeading>

<HgBannerFeedback Severity="Severity.Error" IsEnabled="HasMessagingVerificationsError" TResetAction="MessageVerificationActions.ResetStateAction" DataTestId="banner-feedback-error-message">
    @MessageVerificationState.Value.Error?.Message
</HgBannerFeedback>
<HgBannerFeedback Severity="Severity.Error" IsEnabled="HasSupportUsersError" TResetAction="SupportUserActions.ResetStateAction" DataTestId="user-banner-feedback-error-message">
    @SupportUserState.Value.Error?.Message
</HgBannerFeedback>

<MudForm @ref="Form">
    <MudGrid Spacing="0">
        <MudItem xs="12" sm="3">
            <HgSelect T="UserQueryType" Label="Query Type" Required="@true" @bind-Value="SelectedQueryType" data-testid="query-type-select">
                @foreach (UserQueryType queryType in QueryTypes)
                {
                    <MudSelectItem Value="@queryType" data-testid="query-type">@FormatQueryType(queryType)</MudSelectItem>
                }
            </HgSelect>
        </MudItem>
        <MudItem xs="12" sm="9">
            @if (PhnSelected)
            {
                <HgTextField LeftMargin="Breakpoint.Sm" T="string" Label="@FormatQueryType(SelectedQueryType)" Required="@true" Validation="@ValidateQueryParameter" Mask="@(new PatternMask(Mask.PhnMaskTemplate))" @bind-Value="QueryParameter" data-testid="query-input" />
            }
            else
            {
                <HgTextField LeftMargin="Breakpoint.Sm" T="string" Label="@FormatQueryType(SelectedQueryType)" Required="@true" Validation="@ValidateQueryParameter" @bind-Value="QueryParameter" data-testid="query-input" />
            }
        </MudItem>
        <MudItem Class="d-flex justify-end" xs="12">
            <HgButton TopMargin="Breakpoint.Always" EndIcon="@Icons.Material.Filled.Search" Variant="Variant.Filled" Color="Color.Primary" @onclick="SearchAsync" data-testid="search-btn">Search</HgButton>
        </MudItem>
    </MudGrid>
</MudForm>

<HgBannerFeedback Severity="@Severity.Info" IsEnabled="HasHasSupportUsersWarning" TResetAction="SupportUserActions.ResetStateAction" DataTestId="banner-feedback-warning-message">
    @SupportUserState.Value.WarningMessage
</HgBannerFeedback>

@if (SupportUsersLoaded || SupportUsersLoading)
{
    <MudTable Class="mt-3"
              Items="SupportUserRows"
              Loading="SupportUsersLoading"
              AllowUnsorted="false"
              Breakpoint="Breakpoint.Md"
              HorizontalScrollbar="true"
              Striped="true"
              Dense="true"
              data-testid="support-user-table">
        <HeaderContent>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<SupportUserRow, object>(x => x.Hdid)">
                    HDID
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<SupportUserRow, object>(x => x.PersonalHealthNumber)">
                    PHN
                </MudTableSortLabel>
            </MudTh>
            <MudTh>
                <MudTableSortLabel SortBy="new Func<SupportUserRow, object>(x => x.LastLoginDateTime)"
                                   InitialDirection="@SortDirection.Descending">
                    Last Login
                </MudTableSortLabel>
            </MudTh>
            <MudTh Style="text-align:right"></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="HDID" data-testid=@($"message-user-table-hdid-{context.Hdid}")>@context.Hdid</MudTd>
            <MudTd DataLabel="PHN" data-testid=@($"message-user-table-phn-{context.Hdid}")>@context.PersonalHealthNumber</MudTd>
            <MudTd DataLabel="Last Login" data-testid=@($"message-user-table-last-login-{context.Hdid}")>@DateFormatter.ToShortDateAndTime(context.LastLoginDateTime)</MudTd>
            <MudTd Style="text-align:right">
                <div>
                    <MudTooltip Text="@(context.IsExpanded ? "Collapse" : "Expand")">
                        <MudIconButton OnClick="@(() => ToggleExpandRow(context.Hdid))"
                                       Icon="@(context.IsExpanded ? Icons.Material.Filled.ExpandLess : Icons.Material.Filled.ExpandMore)"
                                       Color="@Color.Primary"
                                       data-testid=@($"messaging-verification-table-expand-btn-{context.Hdid}")>
                        </MudIconButton>
                    </MudTooltip>
                </div>
            </MudTd>
        </RowTemplate>
        <ChildRowContent>
            @if (context.IsExpanded)
            {
                <MessageVerificationTable Data="@GetMessagingVerificationModels(context.Hdid)" IsLoading="@MessagingVerificationsLoading" />
            }
        </ChildRowContent>
        <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
}
