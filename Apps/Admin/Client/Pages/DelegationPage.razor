@page "/delegation"
@layout MainLayout
@attribute [Authorize(Roles = $"{Roles.Admin}")]
@using HealthGateway.Common.Ui.Constants
@using HealthGateway.Admin.Client.Store.Delegation
@using HealthGateway.Admin.Common.Models
@using HealthGateway.Admin.Client.Components.Site
@using HealthGateway.Admin.Client.Components.Delegation
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Health Gateway Admin Delegation</PageTitle>
<HgPageHeading>Delegation</HgPageHeading>
<NavigationConfirmation Enabled="@AnyUnsavedDelegationChanges" />

<MudForm @ref="Form">
    <div class="d-flex align-start">
        <HgTextField
            T="string"
            Label="PHN"
            Required="@true"
            Validation="@ValidateQueryParameter"
            Mask="@Mask.PhnMask"
            TopMargin="Breakpoint.None"
            Class="flex-grow-1"
            @bind-Value="QueryParameter"
            data-testid="query-input" />
        <HgButton
            EndIcon="fas fa-magnifying-glass"
            Variant="@Variant.Filled"
            Color="@Color.Primary"
            Loading="@Searching"
            TopMargin="Breakpoint.Always"
            LeftMargin="Breakpoint.Always"
            OnClick="Search"
            data-testid="search-button">
            Search
        </HgButton>
    </div>
</MudForm>

<HgBannerFeedback
    Class="mt-3"
    Severity="Severity.Error"
    IsEnabled="HasSearchError"
    TResetAction="DelegationActions.ResetStateAction"
    DataTestId="search-error-message">
    @ErrorMessage
</HgBannerFeedback>

@if (Dependent != null)
{
    <MudText Class="mt-3" Typo="Typo.subtitle1">
        Dependent
    </MudText>
    <DependentTable Data="@Dependent" />
    <MudExpansionPanels Class="rounded-t-0" DisableGutters="true">
        <MudExpansionPanel>
            <TitleContent>
                <MudText Typo="Typo.subtitle1" Class="mx-n2" data-testid="delegation-changes-header">
                    Agent Reason History
                </MudText>
            </TitleContent>
            <ChildContent>
                <MudPaper Class="mud-background mx-4 pa-4 overflow-auto" MaxHeight="400px">
                    <MudGrid Spacing="4">
                        @foreach ((AgentAction change, int index) in AgentActions.Select((c, i) => (c, i)))
                        {
                            <MudItem xs="12" data-testid=@($"delegation-change-{index}")>
                                <DelegationChangeEntry Data="@change" />
                            </MudItem>
                        }
                    </MudGrid>
                </MudPaper>
            </ChildContent>
        </MudExpansionPanel>
    </MudExpansionPanels>

    <div class="mt-6 d-flex align-start">
        <MudText Typo="Typo.subtitle1" Class="flex-grow-1">
            Guardians Accessing Dependent
        </MudText>
        <HgButton
            StartIcon="fas fa-edit"
            Variant="@Variant.Filled"
            Color="@Color.Primary"
            TopMargin="Breakpoint.Always"
            RightMargin="Breakpoint.Always"
            Class="@(Dependent.Protected ? "visible" : "invisible")"
            Disabled="@(InEditMode || !Delegates.Any())"
            OnClick="@(() => SetEditMode(true))"
            data-testid="edit-button">
            Edit
        </HgButton>
        <HgButton
            StartIcon="fas fa-plus"
            Variant="@Variant.Filled"
            Color="@Color.Primary"
            TopMargin="Breakpoint.Always"
            Class="@(Dependent.Protected ? "visible" : "invisible")"
            OnClick="@OpenAddDialog"
            data-testid="add-button">
            Add
        </HgButton>
    </div>
    <DelegateTable Data="@Delegates" />
    if (InEditMode)
    {
        <div class="mt-3 d-flex justify-end">
            <HgButton
                RightMargin="Breakpoint.Always"
                Variant="@Variant.Outlined"
                Color="@Color.Default"
                OnClick="@(() => SetEditMode(false))"
                data-testid="cancel-edit-button">
                Cancel
            </HgButton>
            <HgButton
                Variant="@Variant.Filled"
                Color="@Color.Primary"
                Disabled="@(!AnyUnsavedDelegationChanges)"
                OnClick="@OpenProtectConfirmationDialog"
                data-testid="save-button">
                Save
            </HgButton>
        </div>
    }
}
