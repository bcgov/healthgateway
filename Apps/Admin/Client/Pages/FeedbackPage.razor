@page "/feedback"
@attribute [Authorize(Roles = $"{Roles.Admin},{Roles.Reviewer}")]
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using HealthGateway.Admin.Client.Store.Tag
@using HealthGateway.Admin.Common.Models
@using HealthGateway.Common.Data.Utils

<PageTitle>Feedback Review</PageTitle>
<HgPageHeading>Feedback Review</HgPageHeading>

@foreach (RequestError error in TagErrors)
{
    <HgBannerFeedback Severity="@Severity.Error" TResetAction="@TagActions.ResetStateAction">
        @error.Message
    </HgBannerFeedback>
}

<MudForm Class="d-flex">
    <MudTextField T="string"
                  @bind-Value="@ActiveTag"
                  Immediate="true"
                  MaxLength="20"
                  Label="Tag Name"
                  Class="flex-grow-1"
                  @onkeydown="@HandleKeyDownActiveTag"/>
    <HgButton TopMargin="@Breakpoint.Always"
              LeftMargin="@Breakpoint.Always"
              Class="flex-grow-0"
              EndIcon="@Icons.Material.Filled.Add"
              Variant="@Variant.Filled"
              Color="@Color.Success"
              Disabled="@(!ActiveTagIsValid)"
              Loading="@TagState.Value.Add.IsLoading"
              @onclick="@AddTag">
        Add Tag
    </HgButton>
</MudForm>
<MudChipSet @bind-SelectedChips="@SelectedTagChips"
            Class="my-4"
            MultiSelection="true"
            Filter="true">
    @foreach (AdminTagView tag in Tags)
    {
        <MudChip Text="@tag.Name"
                 Class="my-2"
                 Variant="@Variant.Text"
                 Size="@Size.Small"
                 Color="@Color.Tertiary"
                 Disabled="@(TagState.Value.Add.IsLoading || TagState.Value.Delete.IsLoading)"
                 OnClose="@RemoveTag"/>
    }
</MudChipSet>
@if (FeedbackLoaded || FeedbackLoading)
{
    <MudForm>
        <MudTable Class="mt-3" Items="@FeedbackRows" Loading="@(FeedbackLoading || FeedbackUpdating)" Breakpoint="@Breakpoint.Md" HorizontalScrollbar="true" Striped="true" Dense="true">
            <HeaderContent>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<FeedbackRow, object>(x => x.DateTime)"
                                       InitialDirection="@SortDirection.Descending">
                        Date
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<FeedbackRow, object>(x => x.Email)">
                        Email
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<FeedbackRow, object>(x => x.Comments)">
                        Comments
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<FeedbackRow, object>(x => x.TagIds.Count())">
                        Tags
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>
                    <MudTableSortLabel SortBy="new Func<FeedbackRow, object>(x => x.IsReviewed)">
                        Reviewed?
                    </MudTableSortLabel>
                </MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Date">@DateFormatter.ToShortDateAndTime(context.DateTime)</MudTd>
                <MudTd DataLabel="Email">
                    @if (context.Hdid.Length > 0)
                    {
                        <MudIconButton Icon="@Icons.Material.Filled.PersonSearch" Color="@Color.Dark" Size="Size.Small" OnClick="() => NavigateToSupport(context.Hdid)"/>
                    }
                    @if (context.Email.Length > 0)
                    {
                        @context.Email
                    }
                </MudTd>
                <MudTd DataLabel="Comments">@context.Comments</MudTd>
                <MudTd DataLabel="Tags">
                    <MudSelect T="Guid"
                               MultiSelection="true"
                               @bind-SelectedValues="@context.TagIds"
                               MultiSelectionTextFunc="@DescribeTags"
                               Disabled="@FeedbackUpdating"
                               Variant="@Variant.Filled"
                               Margin="@Margin.Dense"
                               Dense="true">
                        @foreach (AdminTagView tag in Tags)
                        {
                            <MudSelectItem T="Guid" Value="@tag.Id">@tag.Name</MudSelectItem>
                        }
                    </MudSelect>
                </MudTd>
                <MudTd DataLabel="Reviewed">
                    <MudIconButton Icon="@(context.IsReviewed ? Icons.Material.Filled.Check : Icons.Material.Filled.Close)"
                                   Color="@(context.IsReviewed ? Color.Success : Color.Error)"
                                   Size="@Size.Small"
                                   Disabled="@FeedbackUpdating"
                                   @onclick="@(() => ToggleIsReviewed(context.Id))"/>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager/>
            </PagerContent>
        </MudTable>
    </MudForm>
}
