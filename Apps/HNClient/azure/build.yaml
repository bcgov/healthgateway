name: 1.0.0$(Rev:.r) #Build number

#Build variables
variables:
  App.Home: $(Build.SourcesDirectory)/Apps/HNClient
  App.Name: HNClient
  App.UnitTests: $(App.Home)/test/unit
  App.FunctionalTests: $(App.Home)/test/functional

pr: none

trigger:
 batch: 'true'
 branches:
   include:
     - dev
 paths:
   include:
     - Apps/HNClient/src
     - Apps/HNClient/test
     - Apps/HNClient/azure/build.yml
     - Apps/HNClient/azure/deploy.ps1

pool:
  name: 'HealthGateway'

steps:
- task: DotNetCoreCLI@2
  displayName: Run dotnet Tests
  inputs:
    command: 'test'
    projects: '$(App.UnitTests)/HNClientTests.csproj'
    testRunTitle: 'HNClient Service Tests'

- script: |
    set -e
    dotnet test \
      test/unit/HNClientTests.csproj \
      /p:CollectCoverage=true \
      /p:CoverletOutputFormat=opencover \
      --logger:"xunit;LogFileName=results.xml" \
      -r ./xUnitResults 
    dotnet sonarscanner begin \
      /d:sonar.verbose=false \
      /k:"hnclientservice_dev" \
      /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" \
      /d:sonar.login="$(sonar.login)" \
      /d:sonar.scm.disabled="true" \
      /d:sonar.coverage.exclusions="**Tests*.cs, **/Common/**, **/Startup.cs, **/Program.cs" \
      /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" \
      /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
    dotnet build    
    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
    echo "$@" >&2
  displayName: 'Perform Static Code Analysis'
  continueOnError: 'false'
  workingDirectory: $(App.Home)
  enabled: 'true'

- task: DotNetCoreCLI@2
  displayName: Publish dotnet code
  inputs:
    modifyOutputPath: false
    command: 'publish'
    publishWebProjects: false
    projects: '$(App.Home)/src'
    versioningScheme: byEnvVar
    versionEnvVar: $(Build.BuildNumber)
    arguments: '--output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo `date` > $(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).txt
      mv $(Build.ArtifactStagingDirectory)/a.zip $(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip
      cp $(App.Home)/azure/deploy.ps1 $(Build.ArtifactStagingDirectory)
  displayName: 'Stage Artifacts'

- task: CopyFiles@2
  displayName: Copy Functional Tests to Staging
  inputs:
    SourceFolder: '$(App.FunctionalTests)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
