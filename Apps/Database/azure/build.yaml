name: 1.0.0$(Rev:.r) #Build number

#Build variables
variables:
  App.Home: $(Build.SourcesDirectory)/Apps/Database
  App.Name: database
  App.UnitTests: $(App.Home)/test/unit

pr: none

trigger: none
#  batch: 'true'
#  branches:
#    include:
#      - dev
#  paths:
#    include:
#      - Apps/Database/src
#      - Apps/Database/test
#      - Apps/Database/azure/build.yml

pool:
  name: 'HealthGateway'

steps:
- task: DotNetCoreCLI@2
  displayName: Run dotnet Tests
  inputs:
    command: 'test'
    projects: '$(App.UnitTests)/DatabaseTests.csproj'
    testRunTitle: 'Database Library Tests'

- script: |
    set -e
    dotnet test test/unit/DatabaseTests.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger:"xunit;LogFileName=results.xml" -r ./xUnitResults 
    dotnet sonarscanner begin /d:sonar.verbose=false /k:"databaselibrary_dev" /d:sonar.host.url="https://sonarqube-gateway.pathfinder.gov.bc.ca" /d:sonar.login="$(sonar.login)" /d:sonar.scm.disabled="true" /d:sonar.coverage.exclusions="**Tests*.cs" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.xunit.reportsPaths="**/xUnitResults/results.xml" 
    dotnet build    
    dotnet sonarscanner end /d:sonar.login="$(sonar.login)"
    echo "$@" >&2
  displayName: 'Perform Static Code Analysis'
  continueOnError: 'false'
  workingDirectory: $(Build.SourcesDirectory)/Apps/Database
  enabled: 'true'

- task: DotNetCoreCLI@2
  displayName: Publish dotnet code
  inputs:
    modifyOutputPath: false
    command: 'publish'
    publishWebProjects: false
    projects: '$(App.Home)/src'
    arguments: '-o $(Build.BinariesDirectory)'
    zipAfterPublish: false

- script: |
    set -e
    echo `date` > $(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).txt
  displayName: 'Create Artifact'

- task: PublishPipelineArtifact@0
  displayName: 'Publish Pipeline Artifact'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
