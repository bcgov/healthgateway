// <auto-generated />
using System;
using HealthGateway.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace HealthGateway.Database.Migrations
{
    [DbContext(typeof(DrugDbContext))]
    partial class DrugDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.trace_seq", "'trace_seq', '', '1', '1', '1', '999999', 'Int64', 'True'");

            modelBuilder.Entity("HealthGateway.Database.Models.ActiveIngredient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ActiveIngredientId");

                    b.Property<int>("ActiveIngredientCode");

                    b.Property<string>("Base")
                        .HasMaxLength(1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("DosageUnit")
                        .HasMaxLength(40);

                    b.Property<string>("DosageUnitFrench")
                        .HasMaxLength(80);

                    b.Property<string>("DosageValue")
                        .HasMaxLength(20);

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("Ingredient")
                        .HasMaxLength(240);

                    b.Property<string>("IngredientFrench")
                        .HasMaxLength(400);

                    b.Property<string>("IngredientSuppliedInd")
                        .HasMaxLength(1);

                    b.Property<string>("Notes")
                        .HasMaxLength(2000);

                    b.Property<string>("Strength")
                        .HasMaxLength(20);

                    b.Property<string>("StrengthType")
                        .HasMaxLength(40);

                    b.Property<string>("StrengthTypeFrench")
                        .HasMaxLength(80);

                    b.Property<string>("StrengthUnit")
                        .HasMaxLength(40);

                    b.Property<string>("StrengthUnitFrench")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("ActiveIngredient");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CompanyId");

                    b.Property<string>("AddressBillingFlag")
                        .HasMaxLength(1);

                    b.Property<string>("AddressMailingFlag")
                        .HasMaxLength(1);

                    b.Property<string>("AddressNotificationFlag")
                        .HasMaxLength(1);

                    b.Property<string>("AddressOther")
                        .HasMaxLength(1);

                    b.Property<string>("CityName")
                        .HasMaxLength(60);

                    b.Property<int>("CompanyCode");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(80);

                    b.Property<string>("CompanyType")
                        .HasMaxLength(40);

                    b.Property<string>("Country")
                        .HasMaxLength(40);

                    b.Property<string>("CountryFrench")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("ManufacturerCode")
                        .HasMaxLength(5);

                    b.Property<string>("PostOfficeBox")
                        .HasMaxLength(15);

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20);

                    b.Property<string>("Province")
                        .HasMaxLength(40);

                    b.Property<string>("ProvinceFrench")
                        .HasMaxLength(100);

                    b.Property<string>("StreetName")
                        .HasMaxLength(80);

                    b.Property<string>("SuiteNumber")
                        .HasMaxLength(20);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.DrugProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DrugProductId");

                    b.Property<string>("AccessionNumber")
                        .HasMaxLength(5);

                    b.Property<string>("AiGroupNumber")
                        .HasMaxLength(10);

                    b.Property<string>("BrandName")
                        .HasMaxLength(200);

                    b.Property<string>("BrandNameFrench")
                        .HasMaxLength(300);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Descriptor")
                        .HasMaxLength(150);

                    b.Property<string>("DescriptorFrench")
                        .HasMaxLength(200);

                    b.Property<string>("DrugClass")
                        .HasMaxLength(40);

                    b.Property<string>("DrugClassFrench")
                        .HasMaxLength(80);

                    b.Property<string>("DrugCode")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("DrugIdentificationNumber")
                        .HasMaxLength(29);

                    b.Property<DateTime>("LastUpdate");

                    b.Property<string>("NumberOfAis")
                        .HasMaxLength(10);

                    b.Property<string>("PediatricFlag")
                        .HasMaxLength(1);

                    b.Property<string>("ProductCategorization")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("DrugProduct");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.FileDownload", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FileDownloadId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(44);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("FileDownload");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Form", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FormId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("PharmaceuticalForm")
                        .HasMaxLength(40);

                    b.Property<int>("PharmaceuticalFormCode");

                    b.Property<string>("PharmaceuticalFormFrench")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Packaging", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PackagingId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("PackageSize")
                        .HasMaxLength(5);

                    b.Property<string>("PackageSizeUnit")
                        .HasMaxLength(40);

                    b.Property<string>("PackageSizeUnitFrench")
                        .HasMaxLength(80);

                    b.Property<string>("PackageType")
                        .HasMaxLength(40);

                    b.Property<string>("PackageTypeFrench")
                        .HasMaxLength(80);

                    b.Property<string>("ProductInformation")
                        .HasMaxLength(80);

                    b.Property<string>("UPC")
                        .HasMaxLength(12);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Packaging");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.PharmaCareDrug", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PharmaCareDrugId");

                    b.Property<string>("BenefitGroupList")
                        .HasMaxLength(60);

                    b.Property<string>("BrandName")
                        .HasMaxLength(80);

                    b.Property<string>("CFRCode")
                        .HasMaxLength(1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("DINPIN")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("DosageForm")
                        .HasMaxLength(20);

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("Date");

                    b.Property<DateTime>("FormularyListDate")
                        .HasColumnType("Date");

                    b.Property<string>("GenericName")
                        .HasMaxLength(60);

                    b.Property<string>("LCAIndicator")
                        .HasMaxLength(2);

                    b.Property<decimal?>("LCAPrice")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("LimitedUseFlag")
                        .HasMaxLength(1);

                    b.Property<string>("Manufacturer")
                        .HasMaxLength(6);

                    b.Property<int?>("MaximumDaysSupply");

                    b.Property<decimal?>("MaximumPrice")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("PayGenericIndicator")
                        .HasMaxLength(1);

                    b.Property<string>("PharmaCarePlanDescription")
                        .HasMaxLength(80);

                    b.Property<string>("Plan")
                        .HasMaxLength(2);

                    b.Property<int?>("QuantityLimit");

                    b.Property<string>("RDPCategory")
                        .HasMaxLength(4);

                    b.Property<string>("RDPExcludedPlans")
                        .HasMaxLength(20);

                    b.Property<decimal?>("RDPPrice")
                        .HasColumnType("decimal(8,4)");

                    b.Property<string>("RDPSubCategory")
                        .HasMaxLength(4);

                    b.Property<string>("TrialFlag")
                        .HasMaxLength(1);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PharmaCareDrug");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.PharmaceuticalStd", b =>
                {
                    b.Property<Guid>("PharmaceuticalStdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PharmaceuticalStdId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("PharmaceuticalStdDesc");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("PharmaceuticalStdId");

                    b.HasIndex("DrugProductId");

                    b.ToTable("PharmaceuticalStd");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RouteId");

                    b.Property<string>("Administration")
                        .HasMaxLength(40);

                    b.Property<int>("AdministrationCode");

                    b.Property<string>("AdministrationFrench")
                        .HasMaxLength(80);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ScheduleId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("ScheduleDesc")
                        .HasMaxLength(40);

                    b.Property<string>("ScheduleDescFrench")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StatusId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<string>("CurrentStatusFlag")
                        .HasMaxLength(1);

                    b.Property<Guid>("DrugProductId");

                    b.Property<DateTime?>("ExpirationDate");

                    b.Property<DateTime?>("HistoryDate");

                    b.Property<string>("LotNumber")
                        .HasMaxLength(80);

                    b.Property<string>("StatusDesc")
                        .HasMaxLength(40);

                    b.Property<string>("StatusDescFrench")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.TherapeuticClass", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TherapeuticClassId");

                    b.Property<string>("Ahfs")
                        .HasMaxLength(80);

                    b.Property<string>("AhfsFrench")
                        .HasMaxLength(160);

                    b.Property<string>("AhfsNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Atc")
                        .HasMaxLength(120);

                    b.Property<string>("AtcFrench")
                        .HasMaxLength(240);

                    b.Property<string>("AtcNumber")
                        .HasMaxLength(8);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("TherapeuticClass");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.VeterinarySpecies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VeterinarySpeciesId");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime>("CreatedDateTime");

                    b.Property<Guid>("DrugProductId");

                    b.Property<string>("Species")
                        .HasMaxLength(80);

                    b.Property<string>("SpeciesFrench")
                        .HasMaxLength(160);

                    b.Property<string>("SubSpecies")
                        .HasMaxLength(80);

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTime?>("UpdatedDateTime")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("DrugProductId");

                    b.ToTable("VeterinarySpecies");
                });

            modelBuilder.Entity("HealthGateway.Database.Models.ActiveIngredient", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Company", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Form", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Packaging", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.PharmaceuticalStd", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Route", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Schedule", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.Status", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.TherapeuticClass", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthGateway.Database.Models.VeterinarySpecies", b =>
                {
                    b.HasOne("HealthGateway.Database.Models.DrugProduct", "DrugProduct")
                        .WithMany()
                        .HasForeignKey("DrugProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
