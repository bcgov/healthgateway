//-------------------------------------------------------------------------
// Copyright © 2020 Province of British Columbia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-------------------------------------------------------------------------
#pragma warning disable CS1591
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

namespace HealthGateway.Database.Migrations
{
    public partial class AddUserDelegateHistory : Migration
    {
        private const string Schema = "gateway";
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "UserDelegateHistory",
                schema: "gateway",
                columns: table => new
                {
                    UserDelegateHistoryId = table.Column<Guid>(nullable: false),
                    CreatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(nullable: false),
                    UpdatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false),
                    OwnerId = table.Column<string>(maxLength: 52, nullable: false),
                    DelegateId = table.Column<string>(maxLength: 52, nullable: false),
                    Operation = table.Column<string>(nullable: false),
                    OperationDateTime = table.Column<DateTime>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserDelegateHistory", x => x.UserDelegateHistoryId);
                });

            string triggerFunction = @$"
CREATE FUNCTION {Schema}.""UserDelegateHistoryFunction""()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    NOT LEAKPROOF
AS $BODY$
BEGIN
    IF(TG_OP = 'DELETE') THEN
        INSERT INTO {Schema}.""UserDelegateHistory""(""UserDelegateHistoryId"", ""Operation"", ""OperationDateTime"",
                    ""OwnerId"", ""DelegateId"", 						 
				    ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"") 
		VALUES(uuid_generate_v4(), TG_OP, now(),
               old.""OwnerId"", old.""DelegateId"",
               old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"");
        RETURN old;
    END IF;
END;$BODY$;";

            string trigger = @$"
CREATE TRIGGER ""UserDelegateHistoryTrigger""
    AFTER DELETE
    ON {Schema}.""UserDelegate""
    FOR EACH ROW
    EXECUTE PROCEDURE {Schema}.""UserDelegateHistoryFunction""();";

            migrationBuilder.Sql(triggerFunction);
            migrationBuilder.Sql(trigger);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql(@$"DROP TRIGGER IF EXISTS ""UserDelegateHistoryTrigger"" ON {Schema}.""UserDelegate""");
            migrationBuilder.Sql(@$"DROP FUNCTION IF EXISTS {Schema}.""UserDelegateHistoryFunction""();");

            migrationBuilder.DropTable(
                name: "UserDelegateHistory",
                schema: "gateway");
        }
    }
}
