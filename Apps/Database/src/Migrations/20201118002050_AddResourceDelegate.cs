//-------------------------------------------------------------------------
// Copyright © 2020 Province of British Columbia
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//-------------------------------------------------------------------------
#pragma warning disable CS1591
// <auto-generated />
using System;
using System.Text.Json;
using Microsoft.EntityFrameworkCore.Migrations;

namespace HealthGateway.Database.Migrations
{
    public partial class AddResourceDelegate : Migration
    {
        private const string Schema = "gateway";
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            // Drop User Delegate history functions
            migrationBuilder.Sql(@$"DROP TRIGGER IF EXISTS ""UserDelegateHistoryTrigger"" ON {Schema}.""UserDelegate"";");
            migrationBuilder.Sql(@$"DROP FUNCTION IF EXISTS {Schema}.""UserDelegateHistoryFunction""();");

            // Drop the UserDelegate
            migrationBuilder.Sql(@$"DROP TABLE IF EXISTS {Schema}.""UserDelegate"";");

            // Drop the UserDelegateHistory
            migrationBuilder.Sql(@$"DROP TABLE IF EXISTS {Schema}.""UserDelegateHistory"";");

            migrationBuilder.CreateTable(
                name: "ResourceDelegateHistory",
                schema: "gateway",
                columns: table => new
                {
                    ResourceDelegateHistoryId = table.Column<Guid>(nullable: false),
                    CreatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(nullable: false),
                    UpdatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false),
                    ResourceOwnerHdid = table.Column<string>(maxLength: 52, nullable: false),
                    ProfileHdid = table.Column<string>(maxLength: 52, nullable: false),
                    ReasonCode = table.Column<string>(maxLength: 10, nullable: false),
                    ReasonObjectType = table.Column<string>(nullable: false),
                    ReasonObject = table.Column<JsonDocument>(nullable: false),
                    Operation = table.Column<string>(nullable: false),
                    OperationDateTime = table.Column<DateTime>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceDelegateHistory", x => x.ResourceDelegateHistoryId);
                });

            migrationBuilder.CreateTable(
                name: "ResourceDelegateReasonCode",
                schema: "gateway",
                columns: table => new
                {
                    ReasonTypeCode = table.Column<string>(maxLength: 10, nullable: false),
                    CreatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(nullable: false),
                    UpdatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false),
                    Description = table.Column<string>(maxLength: 50, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceDelegateReasonCode", x => x.ReasonTypeCode);
                });

            migrationBuilder.CreateTable(
                name: "ResourceDelegate",
                schema: "gateway",
                columns: table => new
                {
                    ResourceOwnerHdid = table.Column<string>(maxLength: 52, nullable: false),
                    ProfileHdid = table.Column<string>(maxLength: 52, nullable: false),
                    ReasonCode = table.Column<string>(maxLength: 10, nullable: false),
                    CreatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(nullable: false),
                    UpdatedBy = table.Column<string>(maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false),
                    ReasonObjectType = table.Column<string>(nullable: false),
                    ReasonObject = table.Column<JsonDocument>(nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_ResourceDelegate", x => new { x.ResourceOwnerHdid, x.ProfileHdid, x.ReasonCode });
                    table.ForeignKey(
                        name: "FK_ResourceDelegate_UserProfile_ProfileHdid",
                        column: x => x.ProfileHdid,
                        principalSchema: "gateway",
                        principalTable: "UserProfile",
                        principalColumn: "UserProfileId",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_ResourceDelegate_ResourceDelegateReasonCode_ReasonCode",
                        column: x => x.ReasonCode,
                        principalSchema: "gateway",
                        principalTable: "ResourceDelegateReasonCode",
                        principalColumn: "ReasonTypeCode",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "ResourceDelegateReasonCode",
                columns: new[] { "ReasonTypeCode", "CreatedBy", "CreatedDateTime", "Description", "UpdatedBy", "UpdatedDateTime" },
                values: new object[] { "COVIDLab", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), "Resource Delegation for Covid Laboratory", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) });

            migrationBuilder.CreateIndex(
                name: "IX_ResourceDelegate_ProfileHdid",
                schema: "gateway",
                table: "ResourceDelegate",
                column: "ProfileHdid");

            migrationBuilder.CreateIndex(
                name: "IX_ResourceDelegate_ReasonCode",
                schema: "gateway",
                table: "ResourceDelegate",
                column: "ReasonCode");

            string triggerFunction = @$"
CREATE FUNCTION {Schema}.""ResourceDelegateHistoryFunction""()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    NOT LEAKPROOF
AS $BODY$
BEGIN
    IF(TG_OP = 'DELETE') THEN
        INSERT INTO {Schema}.""ResourceDelegateHistory""(""ResourceDelegateHistoryId"", ""Operation"", ""OperationDateTime"",
                    ""ResourceOwnerHdid"", ""ProfileHdid"", ""ReasonCode"", ""ReasonObjectType"", ""ReasonObject"",                    
                    ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"") 
        VALUES(uuid_generate_v4(), TG_OP, now(),
               old.""ResourceOwnerHdid"", old.""ProfileHdid"", old.""ReasonCode"", old.""ReasonObjectType"", old.""ReasonObject"",
               old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"");
        RETURN old;
    END IF;
END;$BODY$;";

            string trigger = @$"
CREATE TRIGGER ""ResourceDelegateHistoryTrigger""
    AFTER DELETE
    ON {Schema}.""ResourceDelegate""
    FOR EACH ROW
    EXECUTE PROCEDURE {Schema}.""ResourceDelegateHistoryFunction""();";

            migrationBuilder.Sql(triggerFunction);
            migrationBuilder.Sql(trigger);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.Sql(@$"DROP TRIGGER IF EXISTS ""ResourceDelegateHistoryTrigger"" ON {Schema}.""ResourceDelegate"";");
            migrationBuilder.Sql(@$"DROP FUNCTION IF EXISTS {Schema}.""ResourceDelegateHistoryFunction""();");

            migrationBuilder.DropTable(
                name: "ResourceDelegate",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "ResourceDelegateHistory",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "ResourceDelegateReasonCode",
                schema: "gateway");

            migrationBuilder.CreateTable(
                name: "UserDelegate",
                schema: "gateway",
                columns: table => new
                {
                    OwnerId = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: false),
                    DelegateId = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserDelegate", x => new { x.OwnerId, x.DelegateId });
                });

            migrationBuilder.CreateTable(
                name: "UserDelegateHistory",
                schema: "gateway",
                columns: table => new
                {
                    UserDelegateHistoryId = table.Column<Guid>(type: "uuid", nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    DelegateId = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: false),
                    Operation = table.Column<string>(type: "text", nullable: false),
                    OperationDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    OwnerId = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserDelegateHistory", x => x.UserDelegateHistoryId);
                });
        }
    }
}
