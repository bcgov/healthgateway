// -------------------------------------------------------------------------
//  Copyright © 2019 Province of British Columbia
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// -------------------------------------------------------------------------
#pragma warning disable CS1591
// <auto-generated />
using System;
using System.Collections.Generic;
using HealthGateway.Common.Data.Constants;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace HealthGateway.Database.Migrations
{
    /// <inheritdoc />
    public partial class CreateDelegation : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterColumn<string>(
                name: "Description",
                schema: "gateway",
                table: "ResourceDelegateReasonCode",
                type: "character varying(80)",
                maxLength: 80,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "character varying(50)",
                oldMaxLength: 50);

            migrationBuilder.AddColumn<HashSet<DataSource>>(
                name: "DataSources",
                schema: "gateway",
                table: "ResourceDelegate",
                type: "jsonb",
                nullable: true);

            migrationBuilder.CreateTable(
                name: "DataProtectionKeys",
                schema: "gateway",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    FriendlyName = table.Column<string>(type: "text", nullable: true),
                    Xml = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DataProtectionKeys", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "DelegationStatusCode",
                schema: "gateway",
                columns: table => new
                {
                    Code = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "character varying(80)", maxLength: 80, nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DelegationStatusCode", x => x.Code);
                });

            migrationBuilder.CreateTable(
                name: "HashFunctionCode",
                schema: "gateway",
                columns: table => new
                {
                    Code = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    Description = table.Column<string>(type: "character varying(80)", maxLength: 80, nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_HashFunctionCode", x => x.Code);
                });

            migrationBuilder.CreateTable(
                name: "Delegation",
                schema: "gateway",
                columns: table => new
                {
                    DelegationId = table.Column<Guid>(type: "uuid", nullable: false),
                    Nickname = table.Column<string>(type: "character varying(20)", maxLength: 20, nullable: false),
                    Status = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    SharingCodeHashFunction = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    SharingCodeIterations = table.Column<int>(type: "integer", nullable: false),
                    SharingCodeSalt = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                    SharingCodeHash = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                    FailedAttempts = table.Column<int>(type: "integer", nullable: false),
                    ExpiryDate = table.Column<DateOnly>(type: "date", nullable: true),
                    DataSources = table.Column<HashSet<DataSource>>(type: "jsonb", nullable: true),
                    ResourceOwnerHdid = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: false),
                    ProfileHdid = table.Column<string>(type: "character varying(52)", maxLength: 52, nullable: true),
                    ReasonCode = table.Column<string>(type: "character varying(10)", maxLength: 10, nullable: true),
                    ResourceOwnerIdentifier = table.Column<string>(type: "character varying(255)", maxLength: 255, nullable: false),
                    RemovedByOwner = table.Column<bool>(type: "boolean", nullable: false),
                    RemovedByDelegate = table.Column<bool>(type: "boolean", nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Delegation", x => x.DelegationId);
                    table.ForeignKey(
                        name: "FK_Delegation_DelegationStatusCode_Status",
                        column: x => x.Status,
                        principalSchema: "gateway",
                        principalTable: "DelegationStatusCode",
                        principalColumn: "Code",
                        onDelete: ReferentialAction.Restrict);
                    table.ForeignKey(
                        name: "FK_Delegation_ResourceDelegate_ResourceOwnerHdid_ProfileHdid_R~",
                        columns: x => new { x.ResourceOwnerHdid, x.ProfileHdid, x.ReasonCode },
                        principalSchema: "gateway",
                        principalTable: "ResourceDelegate",
                        principalColumns: new[] { "ResourceOwnerHdid", "ProfileHdid", "ReasonCode" });
                });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "DelegationStatusCode",
                columns: new[] { "Code", "CreatedBy", "CreatedDateTime", "Description", "UpdatedBy", "UpdatedDateTime" },
                values: new object[,]
                {
                    { "AccessExpired", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Access Expired Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "Active", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Active Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "Declined", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Declined Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "InviteExpired", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Invite Expired Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "Locked", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Locked Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "Pending", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "Pending Delegation Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) }
                });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "EmailTemplate",
                columns: new[] { "EmailTemplateId", "Body", "CreatedBy", "CreatedDateTime", "EffectiveDate", "ExpiryDate", "FormatCode", "From", "Name", "Priority", "Subject", "UpdatedBy", "UpdatedDateTime" },
                values: new object[] { new Guid("bb716614-defb-48d0-b243-0796b23c4c35"), "<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>Create Delegation Invite</title>\n    </head>\n    <body style=\"margin: 0\">\n        <table\n            style=\"\n                width: 100%;\n                border-spacing: 0px;\n                margin: 0;\n                color: #707070;\n                font-family: Helvetica, Arial, Verdana, Tahoma, sans-serif;\n                font-size: 12px;\n            \"\n            role=\"presentation\"\n        >\n            <tr style=\"background: #003366\">\n                <th scope=\"col\" style=\"width:45px;\"></th>\n                <th\n                    scope=\"col\"\n                    style=\"text-align: left; width:350px;\"\n                >\n                    <div role=\"img\" aria-label=\"Health Gateway Logo\">\n                        <img\n                            src=\"${ActivationHost}/Logo.png\"\n                            alt=\"Health Gateway Logo\"\n                        />\n                    </div>\n                </th>\n                <th scope=\"col\"></th>\n            </tr>\n            <tr>\n                <td colspan=\"3\" style=\"height:20px;\"></td>\n            </tr>\n            <tr>\n                <td></td>\n                <td>\n                    <p>\n                        Hello,\n                        <br/>\n                        Exciting news! <strong>${ResourceOwnerIdentifier}</strong> has shared their health records with you on Health Gateway.\n                    </p>\n                    <p>\n                        This is a unique opportunity to view important health information, fostering a\n                        collaborative approach to health management.\n                    </p>\n                    <p>\n                        Use the link below within the next <strong>${ExpiryHours}</strong> hours. You can log in to your existing Health\n                        Gateway account or create a new one to access the shared information.\n                    </p>\n                    <a\n                        style=\"color: #1292c5; font-weight: 600\"\n                        href=\"${ActivationHost}/SharingInvite/${InviteKey}\"\n                    >\n                        Open Invite Link\n                    </a>\n                    <p>\n                        <strong>Why Health Gateway?</strong> As part of the provincial government of British Columbia, a\n                        platform dedicated to secure, confidential, and accessible health information sharing.\n\n                        Our platform is designed to empower you with the knowledge to make informed health\n                        decisions. By being a part of the BC government's health initiatives, we ensure the highest\n                        standards of data protection and privacy in managing your health information.\n                    </p>\n                    <p>\n                        <strong>Need Help? </strong> If you need any assistance or have questions, our support team is here to\n                        help you.\n                        <a\n                            style=\"color: #1292c5; font-weight: 600\"\n                            href=\"mailto:HealthGateway@gov.bc.ca\"\n                        >\n                            HealthGateway@gov.bc.ca\n                        </a>\n                    </p>\n                    <p>\n                        Thank you for choosing Health Gateway, where we value your health and privacy.\n                    </p>\n                    <p>\n                        Warm regards,\n                        <br/>\n                        The Health Gateway Team\n                    </p>\n                </td>\n                <td></td>\n            </tr>\n        </table>\n    </body>\n</html>\n", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc), new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc), null, "HTML", "HG_Donotreply@gov.bc.ca", "CreateDelegationInvite", 10, "${ResourceOwnerIdentifier} Has Shared Health Records with You on Health Gateway", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc) });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "HashFunctionCode",
                columns: new[] { "Code", "CreatedBy", "CreatedDateTime", "Description", "UpdatedBy", "UpdatedDateTime" },
                values: new object[,]
                {
                    { "HmacSha1", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "HmacSha1 Hash Function Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "HmacSha256", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "HmacSha256 Hash Function Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) },
                    { "HmacSha512", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc), "HmacSha512 Hash Function Status Code", "System", new DateTime(2019, 5, 1, 7, 0, 0, 0, DateTimeKind.Utc) }
                });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "ResourceDelegateReasonCode",
                columns: new[] { "ReasonTypeCode", "CreatedBy", "CreatedDateTime", "Description", "UpdatedBy", "UpdatedDateTime" },
                values: new object[] { "Invited", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc), "Resource delegation via invitation by the data owner", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc) });

            migrationBuilder.CreateIndex(
                name: "IX_Delegation_ResourceOwnerHdid_ProfileHdid_ReasonCode",
                schema: "gateway",
                table: "Delegation",
                columns: new[] { "ResourceOwnerHdid", "ProfileHdid", "ReasonCode" });

            migrationBuilder.CreateIndex(
                name: "IX_Delegation_Status",
                schema: "gateway",
                table: "Delegation",
                column: "Status");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "DataProtectionKeys",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "Delegation",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "HashFunctionCode",
                schema: "gateway");

            migrationBuilder.DropTable(
                name: "DelegationStatusCode",
                schema: "gateway");

            migrationBuilder.DeleteData(
                schema: "gateway",
                table: "EmailTemplate",
                keyColumn: "EmailTemplateId",
                keyValue: new Guid("bb716614-defb-48d0-b243-0796b23c4c35"));

            migrationBuilder.DeleteData(
                schema: "gateway",
                table: "ResourceDelegateReasonCode",
                keyColumn: "ReasonTypeCode",
                keyValue: "Invited");

            migrationBuilder.DropColumn(
                name: "DataSources",
                schema: "gateway",
                table: "ResourceDelegate");

            migrationBuilder.AlterColumn<string>(
                name: "Description",
                schema: "gateway",
                table: "ResourceDelegateReasonCode",
                type: "character varying(50)",
                maxLength: 50,
                nullable: false,
                oldClrType: typeof(string),
                oldType: "character varying(80)",
                oldMaxLength: 80);
        }
    }
}
