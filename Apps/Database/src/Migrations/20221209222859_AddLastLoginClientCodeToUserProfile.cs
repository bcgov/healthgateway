// -------------------------------------------------------------------------
//  Copyright Â© 2019 Province of British Columbia
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
// -------------------------------------------------------------------------
#pragma warning disable CS1591
// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace HealthGateway.Database.Migrations
{
    /// <inheritdoc />
    public partial class AddLastLoginClientCodeToUserProfile : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AddColumn<string>(
                name: "LastLoginClientCode",
                schema: "gateway",
                table: "UserProfileHistory",
                type: "character varying(10)",
                maxLength: 10,
                nullable: true);

            migrationBuilder.AddColumn<string>(
                name: "LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile",
                type: "character varying(10)",
                maxLength: 10,
                nullable: true);

            migrationBuilder.CreateTable(
                name: "UserLoginClientTypeCode",
                schema: "gateway",
                columns: table => new
                {
                    UserLoginClientCode = table.Column<string>(type: "character varying(10)", maxLength: 10, nullable: false),
                    Description = table.Column<string>(type: "character varying(50)", maxLength: 50, nullable: false),
                    CreatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    CreatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    UpdatedBy = table.Column<string>(type: "character varying(60)", maxLength: 60, nullable: false),
                    UpdatedDateTime = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    xmin = table.Column<uint>(type: "xid", rowVersion: true, nullable: false),
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserLoginClientTypeCode", x => x.UserLoginClientCode);
                });

            migrationBuilder.InsertData(
                schema: "gateway",
                table: "UserLoginClientTypeCode",
                columns: new[] { "UserLoginClientCode", "CreatedBy", "CreatedDateTime", "Description", "UpdatedBy", "UpdatedDateTime" },
                values: new object[,]
                {
                    { "Mobile", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc), "Code for a login from the hg mobile app", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc) },
                    { "Web", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc), "Code for a login from the hg web app", "System", new DateTime(2019, 5, 1, 0, 0, 0, 0, DateTimeKind.Utc) },
                });

            migrationBuilder.CreateIndex(
                name: "IX_UserProfileHistory_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfileHistory",
                column: "LastLoginClientCode");

            migrationBuilder.CreateIndex(
                name: "IX_UserProfile_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile",
                column: "LastLoginClientCode");

            migrationBuilder.AddForeignKey(
                name: "FK_UserProfile_UserLoginClientTypeCode_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile",
                column: "LastLoginClientCode",
                principalSchema: "gateway",
                principalTable: "UserLoginClientTypeCode",
                principalColumn: "UserLoginClientCode",
                onDelete: ReferentialAction.Restrict);

            migrationBuilder.AddForeignKey(
                name: "FK_UserProfileHistory_UserLoginClientTypeCode_LastLoginClientC~",
                schema: "gateway",
                table: "UserProfileHistory",
                column: "LastLoginClientCode",
                principalSchema: "gateway",
                principalTable: "UserLoginClientTypeCode",
                principalColumn: "UserLoginClientCode",
                onDelete: ReferentialAction.Restrict);

            string schema = "gateway";
            string triggerFunction = @$"
            CREATE or REPLACE FUNCTION {schema}.""UserProfileHistoryFunction""()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                NOT LEAKPROOF
            AS $BODY$
            BEGIN
                IF(TG_OP = 'DELETE') THEN
                    INSERT INTO {schema}.""UserProfileHistory""(""UserProfileHistoryId"", ""Operation"", ""OperationDateTime"",
                                ""UserProfileId"", ""AcceptedTermsOfService"", ""TermsOfServiceId"", ""Email"", ""ClosedDateTime"", ""IdentityManagementId"", ""EncryptionKey"",
                                ""YearOfBirth"", ""LastLoginClientCode"", ""LastLoginDateTime"", ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"", ""SMSNumber"")
		            VALUES(uuid_generate_v4(), TG_OP, now(),
                           old.""UserProfileId"", null, old.""TermsOfServiceId"", old.""Email"", old.""ClosedDateTime"", old.""IdentityManagementId"", old.""EncryptionKey"",
                           old.""YearOfBirth"", old.""LastLoginClientCode"", old.""LastLoginDateTime"", old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"", old.""SMSNumber"");
                    RETURN old;
                ELSEIF(TG_OP = 'UPDATE') THEN
                    INSERT INTO {schema}.""UserProfileHistory""(""UserProfileHistoryId"", ""Operation"", ""OperationDateTime"",
                                ""UserProfileId"", ""AcceptedTermsOfService"", ""TermsOfServiceId"", ""Email"", ""ClosedDateTime"", ""IdentityManagementId"", ""EncryptionKey"",
                                ""YearOfBirth"", ""LastLoginClientCode"", ""LastLoginDateTime"", ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"", ""SMSNumber"")
		            VALUES(uuid_generate_v4(), TG_OP || '_LOGIN', now(),
                           old.""UserProfileId"", null, old.""TermsOfServiceId"", old.""Email"", old.""ClosedDateTime"", old.""IdentityManagementId"", old.""EncryptionKey"",
                           old.""YearOfBirth"", old.""LastLoginClientCode"", old.""LastLoginDateTime"", old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"", old.""SMSNumber"");
                    RETURN old;
                END IF;
            END;$BODY$;";
            migrationBuilder.Sql(triggerFunction);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            string schema = "gateway";
            string triggerFunction = @$"
            CREATE or REPLACE FUNCTION {schema}.""UserProfileHistoryFunction""()
                RETURNS trigger
                LANGUAGE 'plpgsql'
                NOT LEAKPROOF
            AS $BODY$
            BEGIN
                IF(TG_OP = 'DELETE') THEN
                    INSERT INTO {schema}.""UserProfileHistory""(""UserProfileHistoryId"", ""Operation"", ""OperationDateTime"",
                                ""UserProfileId"", ""AcceptedTermsOfService"", ""TermsOfServiceId"", ""Email"", ""ClosedDateTime"", ""IdentityManagementId"", ""EncryptionKey"",
                                ""YearOfBirth"", ""LastLoginDateTime"", ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"", ""SMSNumber"")
		            VALUES(uuid_generate_v4(), TG_OP, now(),
                           old.""UserProfileId"", null, old.""TermsOfServiceId"", old.""Email"", old.""ClosedDateTime"", old.""IdentityManagementId"", old.""EncryptionKey"",
                           old.""YearOfBirth"", old.""LastLoginDateTime"", old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"", old.""SMSNumber"");
                    RETURN old;
                ELSEIF(TG_OP = 'UPDATE') THEN
                    INSERT INTO {schema}.""UserProfileHistory""(""UserProfileHistoryId"", ""Operation"", ""OperationDateTime"",
                                ""UserProfileId"", ""AcceptedTermsOfService"", ""TermsOfServiceId"", ""Email"", ""ClosedDateTime"", ""IdentityManagementId"", ""EncryptionKey"",
                                ""YearOfBirth"", ""LastLoginDateTime"", ""CreatedBy"", ""CreatedDateTime"", ""UpdatedBy"", ""UpdatedDateTime"", ""SMSNumber"")
		            VALUES(uuid_generate_v4(), TG_OP || '_LOGIN', now(),
                           old.""UserProfileId"", null, old.""TermsOfServiceId"", old.""Email"", old.""ClosedDateTime"", old.""IdentityManagementId"", old.""EncryptionKey"",
                           old.""YearOfBirth"", old.""LastLoginDateTime"", old.""CreatedBy"", old.""CreatedDateTime"", old.""UpdatedBy"", old.""UpdatedDateTime"", old.""SMSNumber"");
                    RETURN old;
                END IF;
            END;$BODY$;";
            migrationBuilder.Sql(triggerFunction);

            migrationBuilder.DropForeignKey(
                name: "FK_UserProfile_UserLoginClientTypeCode_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile");

            migrationBuilder.DropForeignKey(
                name: "FK_UserProfileHistory_UserLoginClientTypeCode_LastLoginClientC~",
                schema: "gateway",
                table: "UserProfileHistory");

            migrationBuilder.DropTable(
                name: "UserLoginClientTypeCode",
                schema: "gateway");

            migrationBuilder.DropIndex(
                name: "IX_UserProfileHistory_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfileHistory");

            migrationBuilder.DropIndex(
                name: "IX_UserProfile_LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile");

            migrationBuilder.DropColumn(
                name: "LastLoginClientCode",
                schema: "gateway",
                table: "UserProfileHistory");

            migrationBuilder.DropColumn(
                name: "LastLoginClientCode",
                schema: "gateway",
                table: "UserProfile");
        }
    }
}
