name: $(date:yyyy).$(date:MM).$(date:dd).$(rev:r)

pr: none
trigger: none

parameters:
  - name: appType
    displayName: "Application"
    type: string
    values:
      - WebClient
      - Admin
      - Both
    default: WebClient

# Build variables
variables:
  - group: Cypress
  - group: Azure DB - Dev
  - group: Admin - Dev
  - group: Phsa - Dev
  - name: WebClient
    value: ${{ or(eq(parameters.appType, 'WebClient'), eq(parameters.appType, 'Both')) }}
  - name: Admin
    value: ${{ or(eq(parameters.appType, 'Admin'), eq(parameters.appType, 'Both')) }}

jobs:
  - job: "Admin_Seed"
    displayName: "Re-seed DB and PHSA data for Admin"
    pool:
      name: "HGGoldDev"
    condition: eq(variables['Admin'], true)
    timeoutInMinutes: 5
    steps:
      - task: Bash@3
        displayName: "Re-seed DB and PHSA data for Admin"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_seedDb.sh"
          arguments: Testing/functional/tests
        env: # Required secrets for seed db script
          DB_PASSWORD: $(db.password)
          ADMIN_KEYCLOAK_SECRET: $(admin.keycloak.secret)
          PHSA_KEYCLOAK_DEVTOOLS_SECRET: $(phsa.keycloak.devtools.secret)
          REDIS_PASSWORD: $(redis.pw)
          REDIS_ENV: $(redis.env)
  - job: "Admin_Unauthorized_Tests"
    displayName: "Admin Unauthorized Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    condition: and(succeeded(), eq(variables['Admin'], true))
    dependsOn: "Admin_Seed"
    timeoutInMinutes: 5
    steps:
      - task: Bash@3
        displayName: "Run Admin Unauthorized Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runAdminUnauthorizedFunctionalTests.sh"
          arguments: Apps/Admin/Tests/Functional $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for admin tests
          TERM: xterm
          CYPRESS_ADMIN_KEY: $(cypress.admin.key)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          KEYCLOAK_ADMIN_SECRET: $(keycloak.admin.secret)
  - job: "Admin_Authentication_Tests"
    displayName: "Admin Authentication Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    condition: and(succeeded('Admin_Seed'), eq(variables['Admin'], true))
    dependsOn:
      - "Admin_Seed"
      - "Admin_Unauthorized_Tests"
    timeoutInMinutes: 5
    steps:
      - task: Bash@3
        displayName: "Run Admin Authentication Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runAdminAuthenticationFunctionalTests.sh"
          arguments: Apps/Admin/Tests/Functional $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for admin tests
          TERM: xterm
          CYPRESS_ADMIN_KEY: $(cypress.admin.key)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          KEYCLOAK_ADMIN_SECRET: $(keycloak.admin.secret)
  - job: "Admin_Read_Tests"
    displayName: "Admin Read Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    condition: and(succeeded('Admin_Seed'), eq(variables['Admin'], true))
    dependsOn:
      - "Admin_Seed"
      - "Admin_Authentication_Tests"
    strategy:
      parallel: 9
    timeoutInMinutes: 15
    steps:
      - task: Bash@3
        displayName: "Run Admin Read Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runAdminReadFunctionalTests.sh"
          arguments: Apps/Admin/Tests/Functional $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for admin tests
          TERM: xterm
          CYPRESS_ADMIN_KEY: $(cypress.admin.key)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          KEYCLOAK_ADMIN_SECRET: $(keycloak.admin.secret)

  - job: "Admin_Write_Tests"
    displayName: "Admin Write Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    condition: and(succeeded('Admin_Seed'), eq(variables['Admin'], true))
    dependsOn:
      - "Admin_Seed"
      - "Admin_Read_Tests"
    strategy:
      parallel: 5
    timeoutInMinutes: 15
    steps:
      - task: Bash@3
        displayName: "Run Write Admin Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runAdminWriteFunctionalTests.sh"
          arguments: Apps/Admin/Tests/Functional $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for admin tests
          TERM: xterm
          CYPRESS_ADMIN_KEY: $(cypress.admin.key)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          KEYCLOAK_ADMIN_SECRET: $(keycloak.admin.secret)

  - job: "HG_Seed"
    displayName: "Re-seed DB and PHSA data for Functional Tests"
    pool:
      name: "HGGoldDev"
    condition: eq(variables['WebClient'], true)
    dependsOn: "Admin_Write_Tests"
    timeoutInMinutes: 5
    steps:
      - task: Bash@3
        displayName: "Re-seed DB and PHSA data for Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_seedDb.sh"
          arguments: Testing/functional/tests
        env: # Required secrets for seed db script
          DB_PASSWORD: $(db.password)
          ADMIN_KEYCLOAK_SECRET: $(admin.keycloak.secret)
          PHSA_KEYCLOAK_DEVTOOLS_SECRET: $(phsa.keycloak.devtools.secret)
          REDIS_PASSWORD: $(redis.pw)
          REDIS_ENV: $(redis.env)

  - job: "HG_Auth_Functional_Tests"
    displayName: "HG Auth Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    condition: and(succeeded('HG_Seed'), eq(variables['WebClient'], true))
    dependsOn: "HG_Seed"
    timeoutInMinutes: 5
    steps:
      - task: Bash@3
        displayName: "Run HG Auth Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runAuthFunctionalTests.sh"
          arguments: Testing/functional/tests $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for HG tests
          TERM: xterm
          CYPRESS_KEY: $(cypress.key)
          BCSC_PW: $(bcsc.pw)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          PHONENUMBER: $(phoneNumber)
          KEYCLOAK_PHSA_CLIENT: $(keycloak.phsa.client)
          KEYCLOAK_PHSA_SECRET: $(keycloak.phsa.secret)

  - job: "HG_Functional_Tests"
    displayName: "HG Functional Tests"
    pool:
      vmImage: "ubuntu-latest"
    dependsOn:
      - "HG_Seed"
      - "HG_Auth_Functional_Tests"
    condition: and(succeeded('HG_Seed'), eq(variables['WebClient'], true))
    strategy:
      parallel: 9
    timeoutInMinutes: 15
    steps:
      - task: Bash@3
        displayName: "Run HG Functional Tests"
        inputs:
          targetType: filePath
          filePath: "./Tools/Pipelines/scripts/azp_runFunctionalTests.sh"
          arguments: Testing/functional/tests $(Build.BuildNumber)-$(System.JobAttempt) "dev,$(Build.Reason)"
        env: # Required environment settings and secrets for HG tests
          TERM: xterm
          CYPRESS_KEY: $(cypress.key)
          BCSC_PW: $(bcsc.pw)
          KEYCLOAK_PW: $(keycloak.pw)
          IDIR_PASSWORD: $(idir.password)
          PHONENUMBER: $(phoneNumber)
          KEYCLOAK_PHSA_CLIENT: $(keycloak.phsa.client)
          KEYCLOAK_PHSA_SECRET: $(keycloak.phsa.secret)
