apiVersion: template.openshift.io/v1
apiVersion: v1
kind: Template
metadata:
  name: ${NAME}-template
  annotations:
    description: "Template for the creation of Azure Agents"
    tags: "cicd,azure,build,deploy"
objects:

- kind: ServiceAccount
  apiVersion: v1
  metadata:
    name: ${NAME}
  secrets:
  - fieldPath: metadata.namespace

- kind: RoleBinding
  apiVersion: v1
  metadata:
    name: ${NAME}
  roleRef:
    apiGroup: v1
    kind: Role
    name: edit
  subjects:
  - apiVersion: v1
    fieldPath: metadata.namespace
    kind: ServiceAccount
    name: ${NAME}

- apiVersion: v1
  data:
    AZ_DEVOPS_ORG_URL: ${AZ_DEVOPS_ORG_URL}
    AZ_DEVOPS_POOL: ${AZ_DEVOPS_POOL}
  kind: ConfigMap
  metadata:
    name: ${NAME}-config

- apiVersion: v1
  kind: Secret
  metadata:  
     name: ${NAME}-token
  type: Opaque
  stringData:
    AZ_DEVOPS_TOKEN: ${AZ_DEVOPS_TOKEN}

- apiVersion: v1
  kind: Secret
  metadata:
    name: ${NAME}-hooksecret
  type: Opaque
  stringData:
    WebHookSecretKey: ${GIT_WEBHOOK_SECRET}

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    name: ${NAME}-build
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${NAME}:${VERSION}
    postCommit: {}
    resources:
      limits:
        cpu: "2"
        memory: 2Gi
      requests:
        cpu: "1"
        memory: 1Gi
    runPolicy: SerialLatestOnly
    source:
      contextDir: ${SOURCE_CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: 'rhel7:latest'
          namespace: openshift
      type: Docker
    successfulBuildsHistoryLimit: 2
    failedBuildsHistoryLimit: 2
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
    - github:
        secretReference:
          name: ${NAME}-hooksecret
      type: GitHub

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      name: ${NAME}
    name: ${NAME}
  spec:
    replicas: 2
    selector:
      name: ${NAME} #azagent
      deploymentconfig: ${NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          name: ${NAME}
          deploymentconfig: ${NAME}
      spec:
        containers:
          - env:
              - name: AZ_DEVOPS_ORG_URL
                valueFrom:
                  configMapKeyRef:
                    key: AZ_DEVOPS_ORG_URL
                    name: ${NAME}-config
              - name: AZ_DEVOPS_TOKEN
                valueFrom:
                  secretKeyRef:
                    key: AZ_DEVOPS_TOKEN
                    name: ${NAME}-token
              - name: AZ_DEVOPS_POOL
                valueFrom:
                  configMapKeyRef:
                    key: AZ_DEVOPS_POOL
                    name: ${NAME}-config
            image: ${NAME}
            imagePullPolicy: Always
            lifecycle:
              preStop:
                exec:
                  command:
                    - bash
                    - '-c'
                    - >-
                      kill -SIGTERM $(cat /opt/az/agent/agent.pid) >>/dev/termination-log
            name: ${NAME}
            resources: 
              limits:
                cpu: 2500m
                memory: 2048Mi
              requests:
                cpu: 250m
                memory: 512Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccount: ${NAME}
        terminationGracePeriodSeconds: 30
        hostAliases:
        - ip: "10.248.101.18"
          hostnames:
          - "test-citz.healthbc.org"
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - ${NAME}
          from:
            kind: ImageStreamTag
            name: '${NAME}:latest'
        type: ImageChange

parameters:
- description: The name of the Azure Agent
  displayName: Name
  name: NAME
  required: true
  value: azure-agent
- description: The version to tag to the image
  displayName: version
  name: VERSION
  required: true
  value: latest
- description: The source repository
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/bcgov/healthgateway.git
- description: The build source context
  name: SOURCE_CONTEXT_DIR
  required: true
  value: Tools/AzureAgent/docker
- description: The repository branch to build from
  name: SOURCE_REPOSITORY_REF
  required: true
  value: dev
- description: The secret to be used for GitHub webhook integration
  name: GIT_WEBHOOK_SECRET
  generate: expression
  from: "[a-zA-Z0-9]{24}"  
- description: Azure DevOps Organization URL
  name: AZ_DEVOPS_ORG_URL
  required: true
- description: Azure DevOps Agent pool
  name: AZ_DEVOPS_POOL
  required: true
  value: Default
- description: Azure DevOps PAT Token
  name: AZ_DEVOPS_TOKEN
  required: true
