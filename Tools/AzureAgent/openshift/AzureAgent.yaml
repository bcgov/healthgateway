apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${NAME}-template
  labels:
    app: ${NAME}
  annotations:
    description: "Template for the creation of Azure Agents"
    tags: "cicd,azure,build,deploy"
objects:
  - kind: ServiceAccount
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        app: ${NAME}
    secrets:
      - fieldPath: metadata.namespace

  - kind: RoleBinding
    apiVersion: v1
    metadata:
      name: ${NAME}
      labels:
        app: ${NAME}
    roleRef:
      apiGroup: v1
      kind: Role
      name: edit
    subjects:
      - apiVersion: v1
        fieldPath: metadata.namespace
        kind: ServiceAccount
        name: ${NAME}

  - apiVersion: v1
    kind: ConfigMap
    data:
      AZ_DEVOPS_ORG_URL: ${AZ_DEVOPS_ORG_URL}
      AZ_DEVOPS_POOL: ${AZ_DEVOPS_POOL}
      AZ_DEVOPS_WORK_DIR: ${AZ_DEVOPS_WORK_DIR}
    metadata:
      name: ${NAME}-config
      labels:
        app: ${NAME}

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-token
      labels:
        app: ${NAME}
    type: Opaque
    stringData:
      AZ_DEVOPS_TOKEN: ${AZ_DEVOPS_TOKEN}

  - apiVersion: v1
    kind: Secret
    metadata:
      name: ${NAME}-hooksecret
      labels:
        app: ${NAME}
    type: Opaque
    stringData:
      WebHookSecretKey: ${GIT_WEBHOOK_SECRET}

  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${NAME}
      labels:
        app: ${NAME}

  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      name: ${NAME}-build
      labels:
        app: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:${VERSION}
      postCommit: {}
      resources:
        limits:
          cpu: "2.5"
          memory: 6Gi
        requests:
          cpu: "500m"
          memory: 512Mi
      runPolicy: SerialLatestOnly
      source:
        contextDir: ${SOURCE_CONTEXT_DIR}
        git:
          ref: ${SOURCE_REPOSITORY_REF}
          uri: ${SOURCE_REPOSITORY_URL}
        type: Git
      strategy:
        type: Docker
        noCache: true
        dockerStrategy:
          from:
            kind: DockerImage
            name: "docker.io/ubuntu:20.04"
      successfulBuildsHistoryLimit: 5
      failedBuildsHistoryLimit: 3
      triggers:
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
        - type: ConfigChange
        - github:
            secretReference:
              name: ${NAME}-hooksecret
          type: GitHub

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        name: ${NAME}
        deploymentconfig: ${NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            name: ${NAME}
            deploymentconfig: ${NAME}
        spec:
          containers:
            - env:
                - name: AZP_URL
                  valueFrom:
                    configMapKeyRef:
                      key: AZ_DEVOPS_ORG_URL
                      name: ${NAME}-config
                - name: AZP_TOKEN
                  valueFrom:
                    secretKeyRef:
                      key: AZ_DEVOPS_TOKEN
                      name: ${NAME}-token
                - name: AZP_POOL
                  valueFrom:
                    configMapKeyRef:
                      key: AZ_DEVOPS_POOL
                      name: ${NAME}-config
                - name: AZP_WORK
                  valueFrom:
                    configMapKeyRef:
                      key: AZ_DEVOPS_WORK_DIR
                      name: ${NAME}-config
              image: ${NAME}
              imagePullPolicy: Always
              name: ${NAME}
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: 500m
                  memory: 512Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /opt/az/_work
                  name: ephemeral-work
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          serviceAccount: ${NAME}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ephemeral-work
              emptyDir: {}
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: "${NAME}:latest"
              namespace: ${INSTALL_NAMESPACE}
          type: ImageChange

  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      maxReplicas: 5
      minReplicas: 1
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: ${NAME}
      targetCPUUtilizationPercentage: 60

parameters:
  - description: The name of the Azure Agent
    displayName: Name
    name: NAME
    required: true
    value: azure-agent
  - description: The version to tag to the image
    displayName: version
    name: VERSION
    required: true
    value: latest
  - description: The source repository
    name: SOURCE_REPOSITORY_URL
    required: true
    value: https://github.com/bcgov/healthgateway.git
  - description: The build source context
    name: SOURCE_CONTEXT_DIR
    required: true
    value: Tools/AzureAgent/docker
  - description: The repository branch to build from
    name: SOURCE_REPOSITORY_REF
    required: true
    value: dev
  - description: The secret to be used for GitHub webhook integration
    name: GIT_WEBHOOK_SECRET
    generate: expression
    from: "[a-zA-Z0-9]{24}"
  - description: Azure DevOps Organization URL
    name: AZ_DEVOPS_ORG_URL
    required: true
  - description: Azure DevOps Agent pool
    name: AZ_DEVOPS_POOL
    required: true
    value: HealthGatewayOCP4
  - description: Azure DevOps PAT Token
    name: AZ_DEVOPS_TOKEN
    required: true
  - description: Azure Work directory
    name: AZ_DEVOPS_WORK_DIR
    required: true
    value: /opt/az/_work
  - name: INSTALL_NAMESPACE
    displayName: The Namespace where the Azure agent is being deployed.
    description: The namespace of the project to install the agent
    required: true
  - name: CPU_LIMIT
    displayName: The max CPU for this agent
    required: true
    value: 2500m
  - name: MEMORY_LIMIT
    displayName: The max memory for this agent
    required: true
    value: 6Gi
