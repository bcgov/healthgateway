name: 1.0.0$(Rev:.r) #Build number

#Build variables
variables:
  - group: Secrets
  - name: App.Home
    value: $(Build.SourcesDirectory)/Tools/BaseImage/
  - name: App.Name
    value: hg-base

schedules:
  - cron: "0 0 * * *"
    displayName: "Health Gateway Base Image Build"
    branches:
      include:
        - dev
    always: true

pr: none

trigger:
  batch: true
  branches:
    include:
      - dev
  paths:
    include:
      - Tools/BaseImage

pool:
  vmImage: "ubuntu-20.04"

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        echo "$(tls-chain)" | base64 --decode > $(Build.BinariesDirectory)/tls-chain.crt
        echo "---- Debug: TLS Chain Certificate Contents ----"
        cat $(Build.BinariesDirectory)/tls-chain.crt
        echo "---- End Debug: TLS Chain Certificate Contents ----"

        echo "$(tls-root)" | base64 --decode > $(Build.BinariesDirectory)/tls-root.crt
        echo "---- Debug: TLS Root Certificate Contents ----"
        cat $(Build.BinariesDirectory)/tls-root.crt
        echo "---- End Debug: TLS Root Certificate Contents ----"

        echo "$(trusted-root)" | base64 --decode > $(Build.BinariesDirectory)/trusted-root.crt
        echo "---- Debug: Trusted Root Certificate Contents ----"
        cat $(Build.BinariesDirectory)/trusted-root.crt
        echo "---- End Debug: Trusted RootCertificate Contents ----"
  - task: Docker@2
    displayName: "Build Image and push to Docker"
    inputs:
      containerRegistry: "docker-health"
      repository: "$(DockerRepo)/$(App.Name)"
      Dockerfile: Tools/BaseImage/docker/Dockerfile
      buildContext: "$(Build.BinariesDirectory)"
      tags: |
        $(Build.BuildNumber)
        latest
