pr: none
trigger: none
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - dev
pool:
  vmImage: "ubuntu-20.04"

variables:
  - group: Secrets
  - name: SONARSCANNER_VERSION
    value: 5.9.1
jobs:
  - job: AnalyzeProjects
    timeoutInMinutes: 120
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        condition: eq(variables['EnableAzure'], True)
        inputs:
          packageType: sdk
          version: 7.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      # - script: |
      #     npm --prefix WebClient/src/ClientApp install --only=dev
      #     npm --prefix WebClient/src/ClientApp test
      #   displayName: "Run npm Tests"
      #   continueOnError: true
      #   workingDirectory: $(Build.SourcesDirectory)/Apps/
      #   enabled: true

      - script: |
          dotnet tool install --global dotnet-sonarscanner --version $(SONARSCANNER_VERSION)
          dotnet test \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            --logger:"xunit;LogFileName=results.xml"
        displayName: "Run dotnet Tests"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: true

      - script: |
          set -e
          export DOTNET_ROLL_FORWARD=Major
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /k:bcgov_healthgateway \
            /n:"HealthGateway" \
            /d:sonar.login="$(SonarToken)" \
            /d:sonar.dotnet.excludeTestProjects=true \
            /s:$(Build.SourcesDirectory)/Apps/sonar-config.xml
        displayName: "Begin Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"

      - script: |
          dotnet build    
        displayName: "Build Solution"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"

      - script: |
          export DOTNET_ROLL_FORWARD=Major
          dotnet sonarscanner end /d:sonar.login="$(SonarToken)"
          echo "$@" >&2
        displayName: "End Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"
