pr: none
trigger: none
schedules:
  - cron: "0 0 * * *"
    displayName: Daily midnight build
    branches:
      include:
        - dev
pool:
  vmImage: "ubuntu-latest"

variables:
  - group: Secrets
  - name: SONARSCANNER_VERSION
    value: 9.0.2
jobs:
  - job: AnalyzeProjects
    timeoutInMinutes: 120
    steps:
      - task: JavaToolInstaller@0
        inputs:
          versionSpec: "17"
          jdkArchitectureOption: "x64"
          jdkSourceOption: "PreInstalled"

      - task: UseDotNet@2
        displayName: "Install .NET SDK 9.0"
        inputs:
          packageType: sdk
          version: 9.0.100 # Match global.json version
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: DownloadSecureFile@1
        name: testSecrets
        displayName: "Download test secrets"
        inputs:
          secureFile: "integration_test_secrets.json"

      - script: |
          dotnet tool install --global dotnet-sonarscanner --version $(SONARSCANNER_VERSION)
        displayName: "Install SonarScanner"
        enabled: true

      - script: |
          set -e
          export DOTNET_ROLL_FORWARD=Major
          export SONAR_SCANNER_OPTS="-Xmx3072m"
          dotnet sonarscanner begin \
            /o:bcgov-sonarcloud \
            /k:bcgov_healthgateway \
            /n:HealthGateway \
            /d:sonar.token="$(SonarToken)" \
            /s:$(Build.SourcesDirectory)/Apps/sonar-config.xml
        displayName: "Begin Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"

      - script: |
          set -e
          export SECRETS_PATH=$(testSecrets.secureFilePath)
          dotnet build --no-incremental
          dotnet test \
            --no-build \
            --filter "Category!=IntegrationTest" \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=opencover \
            -p:CoverletOutput=TestResults/coverage.opencover.xml \
            -p:ExcludeByAttribute=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute \
            -p:ParallelizeTestCollections=true
        displayName: "Build and Test"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"

      - script: |
          set -e
          dotnet test \
          Admin/Tests/Admin.Tests.csproj \
          --no-build \
          -p:CollectCoverage=true \
          -p:CoverletOutputFormat=opencover \
          -p:CoverletOutput=TestResults/coverage.opencover.xml \
          -p:ExcludeByAttribute=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute \
          -p:ParallelizeTestCollections=true
        displayName: "Run Admin.Tests with Coverage"
        workingDirectory: $(Build.SourcesDirectory)/Apps/

      - script: |
          set -e
          dotnet test \
            Common/test/unit/CommonTests.csproj \
            --no-build \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=opencover \
            -p:CoverletOutput=TestResults/coverage.opencover.xml \
            -p:ExcludeByAttribute=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute \
            -p:ParallelizeTestCollections=true
        displayName: "Run CommonTests with Coverage"
        workingDirectory: $(Build.SourcesDirectory)/Apps/

      - script: |
          set -e
          dotnet test \
            CommonUi/test/unit/CommonUiTests.csproj \
            --no-build \
            --results-directory CommonUi/test/unit/TestResults \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=opencover \
            -p:CoverletOutput=TestResults/coverage.opencover.xml \
            -p:ExcludeByAttribute=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute \
            -p:ParallelizeTestCollections=true
        displayName: "Run CommonUiTests with Coverage"
        workingDirectory: $(Build.SourcesDirectory)/Apps/

      - script: |
          set -e
          dotnet test \
            CommonData/test/unit/CommonDataTests.csproj \
            --no-build \
            -p:CollectCoverage=true \
            -p:CoverletOutputFormat=opencover \
            -p:CoverletOutput=TestResults/coverage.opencover.xml \
            -p:ExcludeByAttribute=System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute \
            -p:ParallelizeTestCollections=true
        displayName: "Run CommonDataTests with Coverage"
        workingDirectory: $(Build.SourcesDirectory)/Apps/

      - script: |
          echo "Coverage file location:"
          find $(Build.SourcesDirectory) -name "coverage.opencover.xml"
        displayName: "Confirm location of coverage.opencover.xml"

      - script: |
          export DOTNET_ROLL_FORWARD=Major
          dotnet sonarscanner end \
            /d:sonar.token="$(SonarToken)"
          echo "$@" >&2
        displayName: "End Static Code Analysis"
        continueOnError: true
        workingDirectory: $(Build.SourcesDirectory)/Apps/
        enabled: "true"
