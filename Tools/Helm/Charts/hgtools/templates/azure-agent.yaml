{{- range $env, $vars := .Values.azureagent.envs -}}
{{- $name := print $env "-azureagent"  -}}
{{- $token := $.Values.token | required "values.token is required" -}}
{{- $dr := ($.Values.dr | required "values.dr is required") | ternary "DR" "" -}}
{{- $azurePoolPrefix := print (($.Values.azureagent).poolPrefix | required "azureagent.poolPrefix is required") $dr -}}
{{- $azureDevopsUrl := ($.Values.azureagent).devopsUrl | required "azureagent.devopsUrl is required" -}}
{{- $imageTag := ($vars).imageTag | default $env -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}-secrets
  namespace: {{ $.Values.licensePlate }}-{{  $env  }}
type: Opaque
data:
  AZP_TOKEN: {{ $token | toString | b64enc }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  namespace: {{ $.Values.licensePlate }}-{{ $env }}
spec:
  replicas: {{ ($vars).replicas | default 1 }}
  podManagementPolicy: Parallel
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: {{ $name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name:  {{ $name }}
      annotations:
        image.openshift.io/triggers: >-
          [{"from": {"kind": "ImageStreamTag","name": {{ $.Values.azureagent.baseImage | base }}:{{ $imageTag }},"namespace": {{ $.Values.licensePlate }}-tools},"fieldPath": "spec.template.spec.containers[?(@.name==\"{{ $name }}\")].image","paused": "false"}]
    spec:
      containers:
        - name:  {{ $name }}
          image: {{ $.Values.azureagent.baseImage }}:{{ $imageTag }}
          imagePullPolicy: Always
          envFrom:
            - secretRef:
                name: {{ print $name "-secrets" }}
          env:
            - name: AZP_URL
              value: {{ $azureDevopsUrl }}
            - name: AZP_POOL
              value: {{ $azurePoolPrefix }}{{ title $env }}
          resources:
            limits:
              cpu: {{ (($vars).resources).cpulimit | default "250m" }}
              memory: {{ (($vars).resources).memlimit | default "512Mi" }}
            requests:
              cpu: {{ (($vars).resources).cpurequest | default "50m" }}
              memory: {{ (($vars).resources).memrequest | default "128Mi" }}
          volumeMounts:
            - mountPath: /opt/az/_work
              name: ephemeral-work
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: ephemeral-work
          emptyDir: {}
---
{{ end -}}
