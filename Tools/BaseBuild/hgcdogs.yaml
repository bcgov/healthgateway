apiVersion: v1
kind: Template
metadata:
  name: ${NAME}-template
  labels:
    app: ${NAME}
objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources:
          limits:
            cpu: "500m"
            memory: 512Mi
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
          post:
            execNewPod:
              command:
                - curl
                - "-X"
                - POST
                - "-H"
                - "Content-Type: application/json"
                - "--data"
                - '{"icon_emoji":":cloud:","text":"Updated Health Gateway App ${NAME} Deployed to **${ENV}**"}'
                - https://chat.developer.gov.bc.ca/hooks/WEHBAtxe6ufWYj2FR/2MMMbS9btPZxtrbgPckiuCqqLzsnEuuWmozKjtY8fXrWHjoa
              containerName: ${NAME}
            failurePolicy: Ignore
        type: Rolling
      template:
        metadata:
          labels:
            app: ${NAME}
            deploymentconfig: ${NAME}
        spec:
          containers:
            - imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: 8000
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8000
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 3
              resources:
                limits:
                  cpu: 500m
                  memory: 1Gi
                requests:
                  cpu: 250m
                  memory: 512Mi
              terminationMessagePath: /${NAME}/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:${ENV}
              namespace: ${TOOLS_NAMESPACE}
          type: ImageChange
        - type: ConfigChange

  - apiVersion: autoscaling/v1
    kind: HorizontalPodAutoscaler
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      maxReplicas: 3
      minReplicas: 1
      scaleTargetRef:
        apiVersion: v1
        kind: DeploymentConfig
        name: ${NAME}
      targetCPUUtilizationPercentage: 60

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      ports:
        - name: 8000-tcp
          port: 8000
          protocol: TCP
          targetPort: 8000
      selector:
        deploymentconfig: ${NAME}
      sessionAffinity: None
      type: ClusterIP

parameters:
  - name: NAME
    displayName: Template Name
    description: The name of the template and all related entities (override for multiple deployments in the same namespace)
    required: true
    value: hgcdogs
  - name: APP_NAME
    displayName: Application Name
    description: The name of the service which must match the image stream
    required: true
    value: hgcdogs
  - name: TOOLS_NAMESPACE
    displayName: Tools Project Namespace
    description: The namespace of the tools project
    required: true
    value: 0bd5ad-tools
  - name: ENV
    displayName: Enviroment
    description: The environment to be deployed to
    required: true
